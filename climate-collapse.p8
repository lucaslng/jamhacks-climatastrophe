pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

black = 0
darkblue = 1
purple = 2
darkgreen = 3
brown = 4
darkgray = 5
lightgray = 6
white = 7
red = 8
orange = 9
yellow = 10
green = 11
blue = 12
lavender = 13
pink = 14
peach = 15

items = {}

function hcenter(s)
	return 64 - #s * 2
end

function vcenter()
	return 61
end

function clamp(val, lower, upper)
	assert(val and lower and upper, "clamp assert")
	return max(lower, min(upper, val))
end

function intro()
	local starttime = time()
	print("hello", hcenter("hello"), vcenter(), white)
	while (time() - starttime < 2) do
	end
end

function die(message)
	cls()
	stop(message, hcenter(message), vcenter(), red)
end

function _init()
	-- cls()
	-- intro()
	cls()
	Player = {
		x = 63,
		y = 63,
		fx = false,
		sprite = 1,
		hunger = 5,
		thirst = 4,
	}

	function Player:moveleft(distance)
		self.x -= distance
		self.fx = true
	end

	function Player:moveright(distance)
		self.x += distance
		self.fx = false
	end

	function Player:moveup(distance)
		self.y -= distance
		self.fx = false
	end

	function Player:movedown(distance)
		self.y += distance
		self.fx = false
	end

	function Player:drink(amount)
		self.thirst = clamp(self.thirst + amount, 0, 5)
		-- self.thirst += amount
	end

	function Player:eat(amount)
		self.hunger = clamp(self.hunger + amount, 0, 5)
	end

	function Player:celx()
		return flr(self.x / 8)
	end

	function Player:cely()
		return flr(self.y / 8)
	end

	tornadoes = {}

	Tornado = {
		x = -10000,
		y = -10000,
		vx = 0,
		vy = 0,
		lifetime = 180
	}

	function Tornado:new()
		o = {}
		setmetatable(o, self)
		self.__index = self
		return o
	end

	Seed = {
		x = 0,
		y = 0,
		growthRate = 150,
		type = "", -- Different types of plants
		isHarvested = false
	}

	function Seed:new()
		types = {"Carrot", "Radish"}
		self.type = types[flr(rnd(#types))+1]
	end
end

function _update()
	local moved = false

	if (btn(0)) then Player:moveleft(1) moved = true end
	if (btn(1)) then Player:moveright(1) moved = true end
	if (btn(2)) then Player:moveup(1) moved = true end
	if (btn(3)) then Player:movedown(1) moved = true end

	if moved then
		if Player.hunger_timer == nil then
			Player.hunger_timer = 0
		end

		Player.hunger_timer += 1

		-- hunger drains when moving
		if Player.hunger_timer >= 300 then
			Player.hunger = max(0, Player.hunger - 0.5)
			Player.hunger_timer = 0
		end
		
		-- thirst drains when moving
		if Player.thirst_timer == nil then Player.thirst_timer = 0 end
			Player.thirst_timer += 1
			if Player.thirst_timer >= 150 then
				Player.thirst = max(0, Player.thirst - 1)
				Player.thirst_timer = 0
		end
	end
	
	-- check if any adjacent tile is water
	if btn(4) then
		local x = Player:celx()
		local y = Player:cely()
	
		if mget(x + 1, y) == 8 or mget(x - 1, y) == 8 or mget(x, y + 1) == 8 or mget(x, y - 1) == 8 or mget(x + 1, y + 1) == 8 or mget(x - 1, y + 1) == 8 or mget(x + 1, y - 1) == 8 or mget(x - 1, y - 1) == 8 then
			Player:drink(1)
		end
	end

	if rnd({ 0, 1, 2 }) <= 1 then
		local tornado = Tornado:new()
		tornado.x = Player.x + flr(rnd(160)) - 80
		tornado.y = Player.y + flr(rnd(160)) - 80
		if (tornado.x < Player.x - 64 or tornado.x > Player.x + 64) and (tornado.y < Player.y - 64 or tornado.y > Player.y + 64) then
			tornado.vx = rnd({ -2, -1, 0, 1, 2 })
			tornado.vy = rnd({ -2, -1, 0, 1, 2 })
			if (tornado.vx != 0 or tornado.vy != 0) then
				add(tornadoes, tornado)
			end
		end
	end

	foreach(tornadoes, function(t) t.x += t.vx t.y += t.vy t.lifetime -= 1 if (abs(Player.x - t.x) <= 2 and abs(Player.y - t.y) <= 2) then die("You died to a tornado!") end end)
	if tornadoes[1] != nil and tornadoes[1].lifetime <= 0 then deli(tornadoes, 1) end
end

function _draw()
	cls()

	camera(Player.x - 63, Player.y - 63)
	map(0, 0, 0, 0, 128, 32)
	spr(Player.sprite, Player.x, Player.y, 1, 1, Player.fx)

	palt()
	foreach(tornadoes, function(t) spr(9 + (t.lifetime % 8) / 2, t.x, t.y) end)

	-- draw hud after resetting camera
	camera()
	
	local full_thirst = flr(Player.thirst)
	local half_thirst = Player.thirst - full_thirst >= 0.5

	for i = 1, full_thirst do
		spr(5, i * 9 - 4, 14, 2, 2) -- full thirst sprite
	end

	if half_thirst then
		spr(44, (full + 1) * 9 - 4, 14, 2, 2) -- half thirst sprite
	end

	palt(green, true)
	palt(black, false)
	
	local full_hunger = flr(Player.hunger)
	local half_hunger = Player.hunger - full_hunger >= 0.5
	
	for i = 1, full_hunger do
		spr(3, i * 9 - 4, 3, 2, 2) -- full hunger sprite
	end
	
	if half_thirst then
		spr(37, (full + 1) * 9 - 4, 3, 2, 2) -- half hunger sprite
	end	

	palt()
	-- print("" .. Player.x .. " " .. Player.y .. "", 3, 20, white)

	draw_hotbar()
end

function draw_hotbar()
	local slot_size = 8
	local slot_x = 64 - slot_size / 2
	local slot_y = 116
	local slot_col = white
	
	rectfill(
		slot_x - 1, 
		slot_y - 1, 
		slot_x + slot_size, 
		slot_y + slot_size, 
		darkgray
	)

	rect(slot_x, slot_y, slot_x + slot_size - 1, slot_y + slot_size - 1, slot_col)
end

__gfx__
000000000b3bb3b065555666bbbbbbbbbbbbbbbb000100000000000000000000cccccccc00555500005555000055550000555500000000000000000000000000
000000003bb3bbbb66556665bbb00bbbbbbbbbbb001c10000000000000000000cccccccc05666650056666500566665005666650000000000000000000000000
0070070003333bb066666655bb0880bbbbbbbbbb001c10000000000000000000cccccccc56667765566666655666666556776665000000000000000000000000
0007700000eeee0056655666b08f890bbbbbbbbb01ccc1000000000000000000cccccccc56677765566776655667766556777665000000000000000000000000
0007700002e0e0e066665566b0884490bbbbbbbb01ccc1000000000000000000cccccccc56677665566777655677766556677665000000000000000000000000
00700700022eeee066566666bb044440bbbbbbbb17cccc100000000000000000cccccccc56666665566677655677666556666665000000000000000000000000
000000000022220055665665bbb04440bbbbbbbb17cccc100000000000000000cccccccc05666650056666500566665005666650000000000000000000000000
000000000002200066655556bbbb000700bbbbbb017cc1000000000000000000cccccccc00555500005555000055550000555500000000000000000000000000
000000000000000000000000bbbbbbb070bbbbbb0011100000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbbb00bbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000bbbbbb0000bbbbbb4444444444544444bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bbb1bbbbbbbbbbbb0000000000000000
00000000bbbbb0cccc0bbbbb4544444444444454bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bb1cbbbbbbbbbbbb0000000000000000
00000000bbbb0cbbbbc0bbbb4445444444444444bb0bbbbbbbbbbbbb0000000000000000000000000000000000000000bb1cbbbbbbbbbbbb0000000000000000
00000000bbb0cb77bbbc0bbb4444444445444544b08fbbbbbbbbbbbb0000000000000000000000000000000000000000b1ccbbbbbbbbbbbb0000000000000000
00000000bbb0cb7bbbbc0bbb4444444444444444b0884bbbbbbbbbbb0000000000000000000000000000000000000000b1ccbbbbbbbbbbbb0000000000000000
00000000bbb0cbbbbbbc0bbb4444445444444444bb0444bbbbbbbbbb000000000000000000000000000000000000000017ccbbbbbbbbbbbb0000000000000000
00000000bbb0cbbbbbbc0bbb4454444444444444bbb0444bbbbbbbbb000000000000000000000000000000000000000017ccbbbbbbbbbbbb0000000000000000
00000000bbbb0cbbbbc0bbbb4444444444445444bbbb0007bbbbbbbb0000000000000000000000000000000000000000b17cbbbbbbbbbbbb0000000000000000
00000000bbbbb0cccc0bbbbb0000000000000000bbbbbbb07bbbbbbb0000000000000000000000000000000000000000bb11bbbbbbbbbbbb0000000000000000
00000000bbbbbb0000bbbbbb0000000000000000bbbbbbb00bbbbbbb0000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000
00000000bbbbbbbbbbbbbbbb0000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000
00000000bbbbbbbbbbbbbbbb0000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000
00000000bbbbbbbbbbbbbbbb0000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000
00000000bbbbbbbbbbbbbbbb0000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000
00000000bbbbbbbbbbbbbbbb0000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000
00000000bbbbbbbbbbbbbbbb0000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000000000000bbbbbbbbbbbbbbbb0000000000000000
__map__
2323232324232424232323242423232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2323242324232408082424242424242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2424242323240808080823232323232400000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2324232323240808080824242323232400020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2324242324230808082324232324232402020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2323242423240808082424232423242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2323242324232424232424242323232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2323232424232323232323232323232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2424242424242324232424232323242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
